const appDetail = [
  {
    title: '인증 토큰 갱신 병목 해결로 서버 부하 감소',
    images: [
      {
        src: '/images/token-refresh-before-after.png',
        caption: '[Before/After 시스템 아키텍처 다이어그램]',
      },
      { src: '/images/token-refresh-flow.png', caption: '[Works Bot 연동 플로우 및 작업 설계]' },
    ],
    problem:
      '토큰 만료 시, 요청 중인 여러 API 요청이 동시에 실패(401)하면서 로그아웃 문제가 발생함',
    cause:
      '각 요청이 개별적으로 Refresh Token을 사용해 재발급을 시도하고, 첫 번째 재발급 요청만 성공하며 나머지 요청은 RTK 만료로 인해 로그아웃 처리됨',
    alternatives: [
      { text: 'Queue 기반의 요청 재처리 로직 도입', selected: true },
      { text: 'Access Token(ATK) 유효 시간 연장', selected: false },
      { text: 'ATK 만료 직전에 사전 재발급 시도', selected: false },
      { text: '백그라운드 만료 감지 후 갱신', selected: false },
    ],
    solution: [
      '다수의 요청이 동시에 401 오류를 받을 수 있는 환경에서 isRefreshing 플래그와 requestQueue를 이용한 구조를 도입하여, 토큰 재발급 중인 상태에서는 추가적인 재발급 요청을 차단하고 그 시점 이후 발생한 요청은 모두 큐에 저장한다. 재발급이 성공하면 큐에 저장된 요청을 다시 실행시켜 중복 요청을 방지하고, 사용자에게는 실패 없이 매끄러운 경험을 제공한다.',
    ],
    insights: [
      '큐 기반 처리로 불필요한 서버 부하를 줄이고, 안정적인 사용자 경험을 제공할 수 있었다.',
      '하지만 첫 번째 재발급 요청이 완료되기까지 대기 중인 요청은 초기 응답 지연이 발생할 수 있는데, 특히 네트워크가 불안정한 상황에서는 재발급 지연이 더 심해져 응답 지연이 가시화될 수 있다.',
      '향후에는 백그라운드에서 토큰 만료를 감지해 갱신하는 전략을 병행하는 것이 효과적일 것같다.',
    ],
  },
  {
    title: '스플래시 화면에서 인증 오류 발생 시 자동 로그아웃 문제 개선',
    images: [],
    problem: '스플래시 화면에서 인증 오류 발생 시 사용자가 자동으로 로그아웃되는 현상이 발생함',
    cause:
      '클라이언트의 네트워크 장애나 서버 오류 상황에 대한 정교한 에러 핸들링이 부족하여, 일시적인 문제에도 토큰이 제거되어 로그아웃 처리됨',
    alternatives: [
      { text: '점진적 Retry → 이후 네트워크 상태 재확인 흐름 적용', selected: true },
      { text: 'API 요청 전 네트워크 상태 사전 확인', selected: false },
      { text: 'Queue를 활용한 요청 재시도(Retry) 구조 도입', selected: false },
    ],
    solution: [
      '네트워크 장애나 서버 오류로 인한 실패에 대해서는 인증 토큰을 제거하지 않도록 에러 핸들링 로직을 개선',
      '네트워크 불안정이 감지된 경우에는 재시도 없이 즉시 네트워크 장애 안내 페이지로 전환하여 불필요한 요청 감소',
      '일시적인 서버 오류(예: 블루/그린 배포 중 발생하는 5xx 오류)를 고려해, Exponential Backoff Retry 전략(1초 → 2초 → 4초, 최대 3회) 을 적용하여 사용자 요청의 안정성을 확보함',
    ],
    insights: [
      '프로세스 개선 및 정교한 에러 핸들링을 통해 불필요한 로그아웃 문제를 방지하고, 사용자 세션 유지의 안정성을 높일 수 있었다.',
      '모바일 환경처럼 네트워크가 불안정한 상황에서 앱이 사용자를 강제로 로그아웃시키는 경험은 신뢰도에 큰 영향을 줄 수 있기 때문에, 토큰 제거 조건을 정교하게 설계한 점이 주요한 개선 포인트였다.',
      '또한 Exponential Backoff Retry 적용으로 서버 오류에 대해 과도한 요청을 방지하면서도 회복 가능성을 고려한 요청 흐름을 설계할 수 있었으며, 이는 서버 부하 감소에도 기여했다.',
      '마지막으로 RTK 만료로 로그아웃된 사용자에게는 이전 로그인 수단을 안내하는 UI를 추가하여, 재로그인 과정을 빠르게 유도하고, 이탈을 줄이고자하였다.',
    ],
  },
];

export default appDetail;
